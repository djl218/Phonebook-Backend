{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/SuccessfulNotification.js","components/UnsuccessfulNotification.js","App.js","index.js"],"names":["Filter","newSearch","handleNewSearch","TextField","value","onChange","PersonForm","addNameNumber","newName","handleNewName","newNumber","handleNewNumber","onSubmit","Button","variant","color","type","Persons","person","deleteNameNumber","TableCell","name","number","onClick","baseURL","axios","get","then","response","data","newObject","post","id","put","delete","SuccessfulNotification","message","style","background","fontSize","borderStyle","borderRadius","padding","marginBottom","UnsuccessfulNotification","App","useState","persons","setPersons","setNewName","setNewNumber","setNewSearch","greenMessage","setGreenMessage","redMessage","setRedMessage","useEffect","personService","initialPersons","personSearch","filter","toLowerCase","includes","Container","Typography","Box","border","borderColor","AppBar","position","event","target","preventDefault","originalPerson","find","n","map","window","confirm","returnedPerson","catch","error","setTimeout","personObject","length","concat","JSON","stringify","replace","TableContainer","component","Paper","Table","TableBody","TableRow","key","deleteNameNumberOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fdbecd67.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  TextField\n} from '@material-ui/core/'\n\nconst Filter = ({ newSearch, handleNewSearch }) => {\n    return (\n        <div>\n          find contact: <TextField value={newSearch} onChange={handleNewSearch}/>\n        </div>\n    )\n}\n\nexport default Filter","import React from 'react'\nimport {\n  TextField,\n  Button\n} from '@material-ui/core/'\n\nconst PersonForm = ({ addNameNumber, newName, handleNewName, newNumber, handleNewNumber }) => {\n    return (\n        <form onSubmit={addNameNumber}>\n        <div>\n          name: <TextField value={newName} onChange={handleNewName} />\n        </div>  \n        <div>\n          number: <TextField value={newNumber} onChange={handleNewNumber} />\n        </div>\n        <div>\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">add</Button>\n        </div>\n        </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\nimport {\n    Button,\n    TableCell\n} from '@material-ui/core/'\n\nconst Persons = ({ person, deleteNameNumber }) => {\n    return (\n            <div>\n                <TableCell>\n                    {person.name} {person.number}\n                </TableCell>\n                <TableCell>\n                    <Button variant=\"contained\" color=\"primary\" onClick={deleteNameNumber}>delete</Button>\n                </TableCell>\n            </div>\n    )\n}\n\nexport default Persons","import axios from 'axios'\nconst baseURL = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseURL)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseURL, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseURL}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n    const request = axios.delete(`${baseURL}/${id}`)\n    return request.then(response => response.data)  \n}\n\nexport default { getAll, create, update, deletePerson }","import React from 'react'\n\nconst SuccessfulNotification = ({ message }) => {\n    const notificationStyle = {\n        color: 'green',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10\n    }\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div style={notificationStyle}>\n            {message}\n        </div>\n    )\n}\n\nexport default SuccessfulNotification","import React from 'react'\n\nconst UnsuccessfulNotification = ({ message }) => {\n    const notificationStyle = {\n        color: 'red',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5, \n        padding: 10,\n        marginBottom: 10\n    }\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div style={notificationStyle}>\n            {message}\n        </div>\n    )\n}\n\nexport default UnsuccessfulNotification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\nimport SuccessfulNotification from './components/SuccessfulNotification'\nimport UnsuccessfulNotification from './components/UnsuccessfulNotification'\n\nimport {\n  Container,\n  Typography,\n  Box,\n  AppBar,\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow,\n  Paper\n} from '@material-ui/core'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newSearch, setNewSearch ] = useState('')\n  const [ greenMessage, setGreenMessage ] = useState(null)\n  const [ redMessage, setRedMessage ] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleNewSearch = (event) => {\n    setNewSearch(event.target.value)\n  }\n\n  const handleNewName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const personSearch = persons.filter(person => \n    person.name.toLowerCase().includes(newSearch.toLowerCase()))\n \n  const addNameNumber = (event) => {\n    event.preventDefault()\n    const originalPerson = persons.find(n => n.name === newName)\n\n    if (persons.map(person => person.name).includes(newName)) {\n      const confirmWindowForDuplicate = \n        window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)  \n      if (confirmWindowForDuplicate === true) {\n        personService\n          .update(originalPerson.id, {...originalPerson, number : newNumber})\n          .then((returnedPerson) => {\n            setPersons(personSearch.map(person => person.name !== newName ? person : returnedPerson))\n            setNewName('')\n            setNewNumber('')\n          })\n          .catch(error => {\n            setRedMessage(\n              `Information of ${newName} has already been removed from server`\n            )\n            setNewName('')\n            setNewNumber('')\n            setTimeout(() => {\n              setRedMessage(null)\n            }, 5000)\n          })    \n      } else {\n        setPersons(personSearch)\n        setNewName('')\n        setNewNumber('')\n      }\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNumber,\n        id: persons.length + 1\n      }\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setGreenMessage(`Added ${newName}`)\n          setNewName('')\n          setNewNumber('')\n          setTimeout(() => {\n            setGreenMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setRedMessage(\n            `${JSON.stringify(error.response.data.error).replace(/\"/g, '')}`\n          )\n          setNewName('')\n          setNewNumber('')\n          setTimeout(() => {\n            setRedMessage(null)\n          }, 5000)  \n        })\n    }  \n  }\n\n  const deleteNameNumberOf = (id) => {\n    const person = persons.find(n => n.id === id)\n    const confirmWindowForDelete = window.confirm(`Delete ${person.name}?`)\n    \n    if (confirmWindowForDelete === true) {\n      personService\n        .deletePerson(id)\n        .then(() => {\n          setPersons(personSearch.filter(person => person.id !== id))\n        }) \n    } else {\n      return personSearch\n    }\n  }  \n    \n  return (\n    <div>\n      <Container>\n        <Typography>\n          <Box border={1} borderColor=\"primary.main\">\n            <AppBar position=\"static\">\n              <h1>Phonebook</h1>\n            </AppBar>\n            <SuccessfulNotification message={greenMessage} />\n            <UnsuccessfulNotification message={redMessage} />\n            <Filter newSearch={newSearch} handleNewSearch={handleNewSearch} />\n            <h2>Add New</h2>  \n            <PersonForm addNameNumber={addNameNumber} newName={newName} handleNewName={handleNewName}\n              newNumber={newNumber} handleNewNumber={handleNewNumber} \n            />\n            <h2>Contacts</h2>\n            <TableContainer component={Paper}>\n              <Table>\n                <TableBody>\n                  {personSearch.map((person) =>\n                    <TableRow key={person.id}>\n                    <Persons \n                      key={person.id}\n                      person={person}\n                      deleteNameNumber={() => deleteNameNumberOf(person.id)} \n                    />\n                    </TableRow>\n                  )}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Box>\n        </Typography>\n      </Container>  \n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}