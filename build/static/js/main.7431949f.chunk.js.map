{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/SuccessfulNotification.js","components/UnsuccessfulNotification.js","App.js","index.js"],"names":["Filter","newSearch","handleNewSearch","value","onChange","PersonForm","addNameNumber","newName","handleNewName","newNumber","handleNewNumber","onSubmit","type","Persons","person","deleteNameNumber","name","number","onClick","baseURL","axios","get","then","response","data","newObject","post","id","put","delete","SuccessfulNotification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","UnsuccessfulNotification","App","useState","persons","setPersons","setNewName","setNewNumber","setNewSearch","personAddedMessage","setPersonAddedMessage","alreadyRemovedMessage","setAlreadyRemovedMessage","useEffect","personService","initialPersons","personSearch","filter","toLowerCase","includes","event","target","preventDefault","originalPerson","find","n","map","window","confirm","returnedPerson","catch","error","setTimeout","personObject","length","concat","key","deleteNameNumberOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7431949f.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ newSearch, handleNewSearch }) => {\n    return (\n        <div>\n          filter shown with <input value={newSearch} onChange={handleNewSearch}/>\n        </div>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({ addNameNumber, newName, handleNewName, newNumber, handleNewNumber }) => {\n    return (\n        <form onSubmit={addNameNumber}>\n        <div>\n          name: <input value={newName} onChange={handleNewName} />\n        </div>  \n        <div>\n          number: <input value={newNumber} onChange={handleNewNumber} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n        </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({ person, deleteNameNumber }) => {\n    return (\n            <div>\n                {person.name} {person.number}\n                <button onClick={deleteNameNumber}>delete</button>\n            </div>\n    )\n}\n\nexport default Persons","import axios from 'axios'\nconst baseURL = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseURL)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseURL, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseURL}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n    const request = axios.delete(`${baseURL}/${id}`)\n    return request.then(response => response.data)  \n}\n\nexport default { getAll, create, update, deletePerson }","import React from 'react'\n\nconst SuccessfulNotification = ({ message }) => {\n    const notificationStyle = {\n        color: 'green',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10\n    }\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div style={notificationStyle}>\n            {message}\n        </div>\n    )\n}\n\nexport default SuccessfulNotification","import React from 'react'\n\nconst UnsuccessfulNotification = ({ message }) => {\n    const notificationStyle = {\n        color: 'red',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5, \n        padding: 10,\n        marginBottom: 10\n    }\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div style={notificationStyle}>\n            {message}\n        </div>\n    )\n}\n\nexport default UnsuccessfulNotification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\nimport SuccessfulNotification from './components/SuccessfulNotification'\nimport UnsuccessfulNotification from './components/UnsuccessfulNotification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newSearch, setNewSearch ] = useState('')\n  const [ personAddedMessage, setPersonAddedMessage ] = useState(null)\n  const [ alreadyRemovedMessage, setAlreadyRemovedMessage ] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleNewSearch = (event) => {\n    setNewSearch(event.target.value)\n  }\n\n  const handleNewName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const personSearch = persons.filter(person => \n    person.name.toLowerCase().includes(newSearch.toLowerCase()))\n \n  const addNameNumber = (event) => {\n    event.preventDefault()\n    const originalPerson = persons.find(n => n.name === newName)\n\n    if (persons.map(person => person.name).includes(newName)) {\n      const confirmWindowForDuplicate = \n        window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)  \n      if (confirmWindowForDuplicate === true) {\n        personService\n          .update(originalPerson.id, {...originalPerson, number : newNumber})\n          .then((returnedPerson) => {\n            setPersons(personSearch.map(person => person.name !== newName ? person : returnedPerson))\n            setNewName('')\n            setNewNumber('')\n          })\n          .catch(error => {\n            setAlreadyRemovedMessage(\n              `Information of ${newName} has already been removed from server`\n            )\n            setNewName('')\n            setNewNumber('')\n            setTimeout(() => {\n              setAlreadyRemovedMessage(null)\n            }, 5000)\n          })    \n      } else {\n        setPersons(personSearch)\n        setNewName('')\n        setNewNumber('')\n      }\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNumber,\n        id: persons.length + 1\n      }\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setPersonAddedMessage(`Added ${newName}`)\n          setNewName('')\n          setNewNumber('')\n          setTimeout(() => {\n            setPersonAddedMessage(null)\n          }, 5000)\n        })\n    }  \n  }\n\n  const deleteNameNumberOf = (id) => {\n    const person = persons.find(n => n.id === id)\n    const confirmWindowForDelete = window.confirm(`Delete ${person.name}?`)\n    \n    if (confirmWindowForDelete === true) {\n      personService\n        .deletePerson(id)\n        .then(() => {\n          setPersons(personSearch.filter(person => person.id !== id))\n        }) \n    } else {\n      return personSearch\n    }\n  }  \n    \n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <SuccessfulNotification message={personAddedMessage} />\n      <UnsuccessfulNotification message={alreadyRemovedMessage} />\n      <Filter newSearch={newSearch} handleNewSearch={handleNewSearch} />\n      <h2>add a new</h2>  \n      <PersonForm addNameNumber={addNameNumber} newName={newName} handleNewName={handleNewName}\n        newNumber={newNumber} handleNewNumber={handleNewNumber} \n      />\n      <h2>Numbers</h2>\n      {personSearch.map((person) =>\n        <Persons \n          key={person.id}\n          person={person}\n          deleteNameNumber={() => deleteNameNumberOf(person.id)} \n        />\n      )}  \n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}